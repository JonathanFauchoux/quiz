{"remainingRequest":"/Users/jfa/Desktop/quiz/node_modules/thread-loader/dist/cjs.js!/Users/jfa/Desktop/quiz/node_modules/babel-loader/lib/index.js!/Users/jfa/Desktop/quiz/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/jfa/Desktop/quiz/src/store/modules/breakpoints.js","dependencies":[{"path":"/Users/jfa/Desktop/quiz/src/store/modules/breakpoints.js","mtime":1555671470000},{"path":"/Users/jfa/Desktop/quiz/node_modules/cache-loader/dist/cjs.js","mtime":1556006305133},{"path":"/Users/jfa/Desktop/quiz/node_modules/thread-loader/dist/cjs.js","mtime":1556006305272},{"path":"/Users/jfa/Desktop/quiz/node_modules/babel-loader/lib/index.js","mtime":1556006302627},{"path":"/Users/jfa/Desktop/quiz/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1556006304591}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"/Users/jfa/Desktop/quiz/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { dispatchEvent } from '@helpers/event';\nvar state = {\n  breakpoints: [],\n  breakpoint: '',\n  width: 0,\n  device: ''\n};\nvar getters = {\n  isDesktop: function isDesktop(state) {\n    return state.device === 'desktop';\n  }\n};\nvar mutations = {\n  updateBreakpoints: function updateBreakpoints(state, breakpoints) {\n    state.breakpoints = _toConsumableArray(breakpoints);\n  },\n  updateBreakpoint: function updateBreakpoint(state, breakpointName) {\n    state.breakpoint = breakpointName;\n  },\n  updateWidth: function updateWidth(state, width) {\n    state.width = width;\n  },\n  updateDevice: function updateDevice(store, breakpointName) {\n    if (breakpointName === 'small') state.device = 'mobile';else if (breakpointName === 'medium') state.device = 'tablet';else state.device = 'desktop';\n  }\n};\nvar actions = {\n  updateWindowWidth: function updateWindowWidth(_ref, windowWidth) {\n    var commit = _ref.commit,\n        state = _ref.state,\n        dispatch = _ref.dispatch;\n\n    if (windowWidth !== state.width) {\n      commit('updateWidth', windowWidth);\n      state.breakpoints.forEach(function (mediaquery) {\n        if (windowWidth >= mediaquery.min && windowWidth <= mediaquery.max) {\n          commit('updateBreakpoint', mediaquery.name);\n          commit('updateDevice', mediaquery.name);\n          dispatchEvent(window, 'breakpoints.change', {\n            name: state.breakpoint\n          });\n        }\n      });\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations,\n  namespaced: true\n};",{"version":3,"sources":["/Users/jfa/Desktop/quiz/src/store/modules/breakpoints.js"],"names":["dispatchEvent","state","breakpoints","breakpoint","width","device","getters","isDesktop","mutations","updateBreakpoints","updateBreakpoint","breakpointName","updateWidth","updateDevice","store","actions","updateWindowWidth","windowWidth","commit","dispatch","forEach","mediaquery","min","max","name","window","namespaced"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAE,EADD;AAEZC,EAAAA,UAAU,EAAE,EAFA;AAGZC,EAAAA,KAAK,EAAE,CAHK;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAd;AAOA,IAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,mBAAAN,KAAK;AAAA,WAAIA,KAAK,CAACI,MAAN,KAAiB,SAArB;AAAA;AADF,CAAhB;AAIA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,iBAAiB,EAAE,2BAACR,KAAD,EAAQC,WAAR,EAAwB;AACzCD,IAAAA,KAAK,CAACC,WAAN,sBAAyBA,WAAzB;AACD,GAHe;AAIhBQ,EAAAA,gBAAgB,EAAE,0BAACT,KAAD,EAAQU,cAAR,EAA2B;AAC3CV,IAAAA,KAAK,CAACE,UAAN,GAAmBQ,cAAnB;AACD,GANe;AAOhBC,EAAAA,WAAW,EAAE,qBAACX,KAAD,EAAQG,KAAR,EAAkB;AAC7BH,IAAAA,KAAK,CAACG,KAAN,GAAcA,KAAd;AACD,GATe;AAUhBS,EAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQH,cAAR,EAA2B;AACvC,QAAIA,cAAc,KAAK,OAAvB,EAAgCV,KAAK,CAACI,MAAN,GAAe,QAAf,CAAhC,KACK,IAAIM,cAAc,KAAK,QAAvB,EAAiCV,KAAK,CAACI,MAAN,GAAe,QAAf,CAAjC,KACAJ,KAAK,CAACI,MAAN,GAAe,SAAf;AACN;AAde,CAAlB;AAiBA,IAAMU,OAAO,GAAG;AACdC,EAAAA,iBAAiB,EAAE,iCAA8BC,WAA9B,EAA8C;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCjB,KAAmC,QAAnCA,KAAmC;AAAA,QAA5BkB,QAA4B,QAA5BA,QAA4B;;AAC/D,QAAIF,WAAW,KAAKhB,KAAK,CAACG,KAA1B,EAAiC;AAC/Bc,MAAAA,MAAM,CAAC,aAAD,EAAgBD,WAAhB,CAAN;AACAhB,MAAAA,KAAK,CAACC,WAAN,CAAkBkB,OAAlB,CAA0B,UAAAC,UAAU,EAAI;AACtC,YAAIJ,WAAW,IAAII,UAAU,CAACC,GAA1B,IAAiCL,WAAW,IAAII,UAAU,CAACE,GAA/D,EAAoE;AAClEL,UAAAA,MAAM,CAAC,kBAAD,EAAqBG,UAAU,CAACG,IAAhC,CAAN;AACAN,UAAAA,MAAM,CAAC,cAAD,EAAiBG,UAAU,CAACG,IAA5B,CAAN;AACAxB,UAAAA,aAAa,CAACyB,MAAD,EAAS,oBAAT,EAA+B;AAC1CD,YAAAA,IAAI,EAAEvB,KAAK,CAACE;AAD8B,WAA/B,CAAb;AAGD;AACF,OARD;AASD;AACF;AAda,CAAhB;AAkBA,eAAe;AACbF,EAAAA,KAAK,EAALA,KADa;AAEbK,EAAAA,OAAO,EAAPA,OAFa;AAGbS,EAAAA,OAAO,EAAPA,OAHa;AAIbP,EAAAA,SAAS,EAATA,SAJa;AAKbkB,EAAAA,UAAU,EAAE;AALC,CAAf","sourcesContent":["import { dispatchEvent } from '@helpers/event'\n\nconst state = {\n  breakpoints: [],\n  breakpoint: '',\n  width: 0,\n  device: ''\n}\n\nconst getters = {\n  isDesktop: state => state.device === 'desktop'\n}\n\nconst mutations = {\n  updateBreakpoints: (state, breakpoints) => {\n    state.breakpoints = [ ...breakpoints ]\n  },\n  updateBreakpoint: (state, breakpointName) => {\n    state.breakpoint = breakpointName\n  },\n  updateWidth: (state, width) => {\n    state.width = width\n  },\n  updateDevice: (store, breakpointName) => {\n    if (breakpointName === 'small') state.device = 'mobile'\n    else if (breakpointName === 'medium') state.device = 'tablet'\n    else state.device = 'desktop'\n  }\n}\n\nconst actions = {\n  updateWindowWidth: ({ commit, state, dispatch }, windowWidth) => {\n    if (windowWidth !== state.width) {\n      commit('updateWidth', windowWidth)\n      state.breakpoints.forEach(mediaquery => {\n        if (windowWidth >= mediaquery.min && windowWidth <= mediaquery.max) {\n          commit('updateBreakpoint', mediaquery.name)\n          commit('updateDevice', mediaquery.name)\n          dispatchEvent(window, 'breakpoints.change', {\n            name: state.breakpoint\n          })\n        }\n      })\n    }\n  }\n\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n  namespaced: true\n}\n"]}]}
{"remainingRequest":"/Users/jfa/Desktop/quizz animation-transition/node_modules/babel-loader/lib/index.js!/Users/jfa/Desktop/quizz animation-transition/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jfa/Desktop/quizz animation-transition/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jfa/Desktop/quizz animation-transition/src/components/Question/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jfa/Desktop/quizz animation-transition/src/components/Question/index.vue","mtime":1557482370429},{"path":"/Users/jfa/Desktop/quizz animation-transition/node_modules/cache-loader/dist/cjs.js","mtime":1556006305133},{"path":"/Users/jfa/Desktop/quizz animation-transition/node_modules/babel-loader/lib/index.js","mtime":1556006302627},{"path":"/Users/jfa/Desktop/quizz animation-transition/node_modules/cache-loader/dist/cjs.js","mtime":1556006305133},{"path":"/Users/jfa/Desktop/quizz animation-transition/node_modules/vue-loader/lib/index.js","mtime":1556006305280}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar MODE_ADDITION = 1;\nvar MODE_SUBSTRACTION = 2;\nexport default {\n  name: 'Question',\n  data: function data() {\n    return {\n      question: 'Oops, an error ocurred :/',\n      btnData: [{\n        correct: true,\n        answer: 0\n      }, {\n        correct: false,\n        answer: 0\n      }, {\n        correct: false,\n        answer: 0\n      }, {\n        correct: false,\n        answer: 0\n      }]\n    };\n  },\n  components: {},\n  computed: {},\n  created: function created() {\n    this.generateQuestion();\n  },\n  methods: {\n    generateQuestion: function generateQuestion() {\n      var firstNumber = this.generateRandomNumber(1, 10);\n      var secondNumber = this.generateRandomNumber(1, 10);\n      var modeNumber = this.generateRandomNumber(1, 2);\n      var correctAnswer = 0;\n\n      switch (modeNumber) {\n        case MODE_ADDITION:\n          console.log(firstNumber);\n          correctAnswer = firstNumber + secondNumber;\n          this.question = 'Résultat de  : ' + firstNumber + ' + ' + secondNumber + ' ?';\n          break;\n\n        case MODE_SUBSTRACTION:\n          correctAnswer = firstNumber - secondNumber;\n          this.question = 'Résultat de : ' + firstNumber + ' - ' + secondNumber + ' ?';\n          break;\n\n        default:\n          correctAnswer = 0;\n          this.question = 'Oops, il y a une erreur :/';\n      }\n\n      this.btnData[0].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer);\n      this.btnData[0].correct = false;\n      this.btnData[1].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer);\n      this.btnData[1].correct = false;\n      this.btnData[2].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer);\n      this.btnData[2].correct = false;\n      this.btnData[3].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer);\n      this.btnData[3].correct = false;\n      var correctButton = this.generateRandomNumber(0, 3);\n      this.btnData[correctButton].correct = true;\n      this.btnData[correctButton].answer = correctAnswer;\n    },\n    generateRandomNumber: function generateRandomNumber(min, max, except) {\n      var rndNumber = Math.round(Math.random() * (max - min)) + min; // console.log(min, max, rndNumber)\n\n      if (rndNumber === except) {\n        return this.generateRandomNumber(min, max, except);\n      }\n\n      return rndNumber;\n    },\n    onAnswer: function onAnswer(isCorrect) {\n      this.$emit('answered', isCorrect);\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title text-center\">{{ question }}</h3>\n      </div>\n      <div class=\"panel-body row\">\n        <div class=\"col-xs-12 col-sm-6 text-center\">\n          <button class=\"btn btn-primary btn-lg\" style=\"margin: 1rem;\" @click=\"onAnswer(btnData[0].correct)\"> {{btnData[0].answer}} </button>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-center\">\n          <button class=\"btn btn-primary btn-lg\" style=\"margin: 1rem;\" @click=\"onAnswer(btnData[1].correct)\"> {{btnData[1].answer}} </button>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-center\">\n          <button class=\"btn btn-primary btn-lg\" style=\"margin: 1rem;\" @click=\"onAnswer(btnData[2].correct)\"> {{btnData[2].answer}} </button>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-center\">\n          <button class=\"btn btn-primary btn-lg\" style=\"margin: 1rem;\" @click=\"onAnswer(btnData[3].correct)\"> {{btnData[3].answer}} </button>\n        </div>\n      </div>\n    </div>\n\n</template>\n\n<script>\nconst MODE_ADDITION = 1\nconst MODE_SUBSTRACTION = 2\nexport default {\n  name: 'Question',\n  data () {\n    return {\n      question: 'Oops, an error ocurred :/',\n      btnData: [\n        { correct: true, answer: 0 },\n        { correct: false, answer: 0 },\n        { correct: false, answer: 0 },\n        { correct: false, answer: 0 }\n      ]\n    }\n  },\n  components: {},\n  computed: {},\n  created () {\n    this.generateQuestion()\n  },\n  methods: {\n    generateQuestion () {\n      const firstNumber = this.generateRandomNumber(1, 10)\n      const secondNumber = this.generateRandomNumber(1, 10)\n      const modeNumber = this.generateRandomNumber(1, 2)\n      let correctAnswer = 0\n\n      switch (modeNumber) {\n        case MODE_ADDITION:\n          console.log(firstNumber)\n          correctAnswer = firstNumber + secondNumber\n          this.question = 'Résultat de  : ' + firstNumber + ' + ' + secondNumber + ' ?'\n          break\n        case MODE_SUBSTRACTION:\n          correctAnswer = firstNumber - secondNumber\n          this.question = 'Résultat de : ' + firstNumber + ' - ' + secondNumber + ' ?'\n          break\n        default:\n          correctAnswer = 0\n          this.question = 'Oops, il y a une erreur :/'\n      }\n      this.btnData[0].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer)\n      this.btnData[0].correct = false\n      this.btnData[1].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer)\n      this.btnData[1].correct = false\n      this.btnData[2].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer)\n      this.btnData[2].correct = false\n      this.btnData[3].answer = this.generateRandomNumber(correctAnswer - 10, correctAnswer + 10, correctAnswer)\n      this.btnData[3].correct = false\n\n      const correctButton = this.generateRandomNumber(0, 3)\n      this.btnData[correctButton].correct = true\n      this.btnData[correctButton].answer = correctAnswer\n    },\n    generateRandomNumber (min, max, except) {\n      const rndNumber = Math.round(Math.random() * (max - min)) + min\n      // console.log(min, max, rndNumber)\n      if (rndNumber === except) {\n        return this.generateRandomNumber(min, max, except)\n      }\n      return rndNumber\n    },\n    onAnswer (isCorrect) {\n      this.$emit('answered', isCorrect)\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n.panel-body{\n  display: flex;\n  padding: 5rem;\n  .btn{\n    padding:1.5rem 2.5rem;\n    font-size: 2rem;\n    background-color: colors(primary);\n    border: 1px solid transparent;\n    transition: all .5s ease;\n    &:hover{\n      color: colors(primary);\n      background-color: white;\n      border: 1px solid colors(primary);\n    }\n  }\n}\n.panel-title{\n  padding: 2rem;\n  position: relative;\n  right: 1.5rem;\n}\n.panel-heading{\n  border-bottom: 1px solid gainsboro;\n}\n</style>\n"],"sourceRoot":"src/components/Question"}]}